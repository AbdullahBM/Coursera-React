{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport var addComment = function addComment(dishId, rating, author, comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n    }\n  };\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + \"dishes\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + \"comments\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading());\n    return fetch(baseUrl + \"promotions\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};","map":{"version":3,"sources":["/home/abdulah/Downloads/coursera-React/confusion/Con Fusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","dishes","addDishes","catch","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\n\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n\n  return fetch(baseUrl + \"dishes\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\n\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"comments\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\n\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + \"promotions\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\n\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\n"]},"metadata":{},"sourceType":"module"}