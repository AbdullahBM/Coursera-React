{"ast":null,"code":"import _classCallCheck from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdulah/Downloads/coursera-React/confusion/src/components/CommentForm.js\";\nimport React, { Component } from \"react\";\nimport { Button, Row, Col, Label, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isModalOpen: false\n    };\n\n    _this.toggleModal = function () {\n      _this.setState({\n        isModalOpen: !_this.state.isModalOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(values) {\n      this.toggleModal();\n      console.log(\"Current State is: \" + JSON.stringify(values));\n      alert(\"Current State is: \" + JSON.stringify(values)); // event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var required = function required(val) {\n        return val && val.length;\n      };\n\n      var maxLength = function maxLength(len) {\n        return function (val) {\n          return !val || val.length <= len;\n        };\n      };\n\n      var minLength = function minLength(len) {\n        return function (val) {\n          return val && val.length >= len;\n        };\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-sign-in fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), \" Comment Form\"), React.createElement(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Submit Comment\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(LocalForm, {\n        onSubmit: function onSubmit(values) {\n          return _this2.handleSubmit(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Control.select, {\n        model: \".contactType\",\n        name: \"contactType\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"5\"))), React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Your Name\"), React.createElement(Control.text, {\n        model: \".name\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Your Name\",\n        className: \"form-control\",\n        validators: {\n          required: required,\n          minLength: minLength(3),\n          maxLength: maxLength(15)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Errors, {\n        className: \"text-danger\",\n        model: \".name\",\n        show: \"touched\",\n        messages: {\n          required: \"Required\",\n          minLength: \"Must be greater than 2 characters\",\n          maxLength: \"Must be 15 numbers or less\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Your Feedback\"), React.createElement(Control.textarea, {\n        model: \".message\",\n        id: \"message\",\n        name: \"message\",\n        rows: \"6\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        value: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nexport default CommentForm;","map":{"version":3,"sources":["/home/abdulah/Downloads/coursera-React/confusion/src/components/CommentForm.js"],"names":["React","Component","Button","Row","Col","Label","Modal","ModalHeader","ModalBody","Control","LocalForm","Errors","CommentForm","state","isModalOpen","toggleModal","setState","values","console","log","JSON","stringify","alert","required","val","length","maxLength","len","minLength","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Label,\n  Modal,\n  ModalHeader,\n  ModalBody\n} from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nclass CommentForm extends Component {\n  state = {\n    isModalOpen: false\n  };\n  toggleModal = () => {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  };\n\n  handleSubmit(values) {\n    this.toggleModal();\n    console.log(\"Current State is: \" + JSON.stringify(values));\n    alert(\"Current State is: \" + JSON.stringify(values));\n    // event.preventDefault();\n  }\n\n  render() {\n    const required = val => val && val.length;\n    const maxLength = len => val => !val || val.length <= len;\n    const minLength = len => val => val && val.length >= len;\n    return (\n      <div>\n        <Button outline onClick={this.toggleModal}>\n          <span className=\"fa fa-sign-in fa-lg\" /> Comment Form\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Control.select\n                  model=\".contactType\"\n                  name=\"contactType\"\n                  className=\"form-control\"\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                </Control.select>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"name\">Your Name</Label>\n                <Control.text\n                  model=\".name\"\n                  id=\"name\"\n                  name=\"name\"\n                  placeholder=\"Your Name\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(15)\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".name\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \"Must be greater than 2 characters\",\n                    maxLength: \"Must be 15 numbers or less\"\n                  }}\n                />\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"message\">Your Feedback</Label>\n                <Control.textarea\n                  model=\".message\"\n                  id=\"message\"\n                  name=\"message\"\n                  rows=\"6\"\n                  className=\"form-control\"\n                />\n              </Row>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}