{"ast":null,"code":"import _classCallCheck from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdulah/Downloads/coursera-React/confusion/src/components/DishdetailComponent.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Row, Label, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isModalOpen: false\n    };\n\n    _this.toggleModal = function () {\n      _this.setState({\n        isModalOpen: !_this.state.isModalOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(values) {\n      this.toggleModal();\n      console.log(\"Current State is: \" + JSON.stringify(values));\n      alert(\"Current State is: \" + JSON.stringify(values)); // event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var required = function required(val) {\n        return val && val.length;\n      };\n\n      var maxLength = function maxLength(len) {\n        return function (val) {\n          return !val || val.length <= len;\n        };\n      };\n\n      var minLength = function minLength(len) {\n        return function (val) {\n          return val && val.length >= len;\n        };\n      };\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-sign-in fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), \" Comment Form\"), React.createElement(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Submit Comment\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(LocalForm, {\n        onSubmit: function onSubmit(values) {\n          return _this2.handleSubmit(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Control.select, {\n        model: \".contactType\",\n        name: \"contactType\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"5\"))), React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Your Name\"), React.createElement(Control.text, {\n        model: \".name\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Your Name\",\n        className: \"form-control\",\n        validators: {\n          required: required,\n          minLength: minLength(3),\n          maxLength: maxLength(15)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Errors, {\n        className: \"text-danger\",\n        model: \".name\",\n        show: \"touched\",\n        messages: {\n          required: \"Required\",\n          minLength: \"Must be greater than 2 characters\",\n          maxLength: \"Must be 15 numbers or less\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Your Feedback\"), React.createElement(Control.textarea, {\n        model: \".message\",\n        id: \"message\",\n        name: \"message\",\n        rows: \"6\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        value: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nfunction RenderDish(_ref) {\n  var dish = _ref.dish;\n  if (dish != null) return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    top: true,\n    src: dish.image,\n    alt: dish.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, dish.name), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, dish.description)));else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  });\n}\n\nfunction RenderComments(_ref2) {\n  var comments = _ref2.comments;\n\n  if (comments != null) {\n    return comments.map(function (comment) {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, comment.author, \" ...\", new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"2-digit\"\n      }).format(new Date(Date.parse(comment.date)))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, comment.comment));\n    });\n  } else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  });\n}\n\nvar Dishdetail = function Dishdetail(props) {\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(BreadcrumbItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Menu\")), React.createElement(BreadcrumbItem, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, props.dish.name)), React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, props.dish.name), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(RenderDish, {\n    dish: props.dish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(RenderComments, {\n    comments: props.comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }))));\n};\n\nexport default Dishdetail;","map":{"version":3,"sources":["/home/abdulah/Downloads/coursera-React/confusion/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Button","Row","Label","Modal","ModalHeader","ModalBody","Control","LocalForm","Errors","Link","CommentForm","state","isModalOpen","toggleModal","setState","values","console","log","JSON","stringify","alert","required","val","length","maxLength","len","minLength","handleSubmit","RenderDish","dish","image","name","description","RenderComments","comments","map","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Row,\n  Label,\n  Modal,\n  ModalHeader,\n  ModalBody\n} from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\n\nclass CommentForm extends Component {\n  state = {\n    isModalOpen: false\n  };\n  toggleModal = () => {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  };\n\n  handleSubmit(values) {\n    this.toggleModal();\n    console.log(\"Current State is: \" + JSON.stringify(values));\n    alert(\"Current State is: \" + JSON.stringify(values));\n    // event.preventDefault();\n  }\n\n  render() {\n    const required = val => val && val.length;\n    const maxLength = len => val => !val || val.length <= len;\n    const minLength = len => val => val && val.length >= len;\n    return (\n      <div className=\"container\">\n        <Button outline onClick={this.toggleModal}>\n          <span className=\"fa fa-sign-in fa-lg\" /> Comment Form\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <div className=\"container\">\n              <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                <Row className=\"form-group\">\n                  <Control.select\n                    model=\".contactType\"\n                    name=\"contactType\"\n                    className=\"form-control\"\n                  >\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </Control.select>\n                </Row>\n                <Row className=\"form-group\">\n                  <Label htmlFor=\"name\">Your Name</Label>\n                  <Control.text\n                    model=\".name\"\n                    id=\"name\"\n                    name=\"name\"\n                    placeholder=\"Your Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15)\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".name\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 numbers or less\"\n                    }}\n                  />\n                </Row>\n                <Row className=\"form-group\">\n                  <Label htmlFor=\"message\">Your Feedback</Label>\n                  <Control.textarea\n                    model=\".message\"\n                    id=\"message\"\n                    name=\"message\"\n                    rows=\"6\"\n                    className=\"form-control\"\n                  />\n                </Row>\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                  Submit\n                </Button>\n              </LocalForm>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction RenderDish({ dish }) {\n  if (dish != null)\n    return (\n      <Card>\n        <CardImg top src={dish.image} alt={dish.name} />\n        <CardBody>\n          <CardTitle>{dish.name}</CardTitle>\n          <CardText>{dish.description}</CardText>\n        </CardBody>\n      </Card>\n    );\n  else return <div />;\n}\n\nfunction RenderComments({ comments }) {\n  if (comments != null) {\n    return comments.map(comment => {\n      return (\n        <ul>\n          <li>\n            {comment.author} ...\n            {new Intl.DateTimeFormat(\"en-US\", {\n              year: \"numeric\",\n              month: \"short\",\n              day: \"2-digit\"\n            }).format(new Date(Date.parse(comment.date)))}\n          </li>\n          <li>{comment.comment}</li>\n        </ul>\n      );\n    });\n  } else return <div />;\n}\n\nconst Dishdetail = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/menu\">Menu</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n          <h3>{props.dish.name}</h3>\n          <hr />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 col-md-5 m-1\">\n          <RenderDish dish={props.dish} />\n        </div>\n        <div className=\"col-12 col-md-5 m-1\">\n          <h4 className=\"text-center\">Comments</h4>\n          <RenderComments comments={props.comments} />\n          <CommentForm />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dishdetail;\n"]},"metadata":{},"sourceType":"module"}