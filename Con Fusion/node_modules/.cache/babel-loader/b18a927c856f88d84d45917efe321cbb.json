{"ast":null,"code":"import _classCallCheck from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abdulah/Downloads/coursera-React/confusion/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdulah/Downloads/coursera-React/confusion/src/components/DishdetailComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from \"reactstrap\";\n\nvar Dishdetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dishdetail, _Component);\n\n  function Dishdetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dishdetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dishdetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedDish: null\n    };\n    return _this;\n  }\n\n  _createClass(Dishdetail, [{\n    key: \"onDishSelect\",\n    value: function onDishSelect(dish) {\n      this.setState({\n        selectedDish: dish\n      });\n    }\n  }, {\n    key: \"renderDish\",\n    value: function renderDish(dish) {\n      if (dish != null) return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        top: true,\n        src: dish.image,\n        alt: dish.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, dish.name), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, dish.description)));else return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderComments\",\n    value: function renderComments(dish) {\n      if (dish != null) return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, dish.comments.author), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, dish.comments.comment));else return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.props.dishes.map(function (dish) {\n        return React.createElement(\"div\", {\n          className: \"col-12 col-md-5 m-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(Card, {\n          key: dish.id,\n          onClick: function onClick() {\n            return _this2.onDishSelect(dish);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(CardImg, {\n          width: \"100%\",\n          src: dish.image,\n          alt: dish.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(CardImgOverlay, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, dish.name))));\n      });\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.renderDish(this.state.selectedDish)), React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Comments\"), this.renderComments(this.state.selectedDish)));\n    }\n  }]);\n\n  return Dishdetail;\n}(Component);\n\nexport default Dishdetail;","map":{"version":3,"sources":["/home/abdulah/Downloads/coursera-React/confusion/src/components/DishdetailComponent.jsx"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","Dishdetail","state","selectedDish","dish","setState","image","name","description","comments","author","comment","props","dishes","map","id","onDishSelect","renderDish","renderComments"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,SANF,QAOO,YAPP;;IASMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE;AADR,K;;;;;;iCAIKC,I,EAAM;AACjB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,YAAY,EAAEC;AAAhB,OAAd;AACD;;;+BAEUA,I,EAAM;AACf,UAAIA,IAAI,IAAI,IAAZ,EACE,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,GAAG,MAAZ;AAAa,QAAA,GAAG,EAAEA,IAAI,CAACE,KAAvB;AAA8B,QAAA,GAAG,EAAEF,IAAI,CAACG,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYH,IAAI,CAACG,IAAjB,CADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWH,IAAI,CAACI,WAAhB,CAFF,CAFF,CADF,CADF,KAUK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACN;;;mCAEcJ,I,EAAM;AACnB,UAAIA,IAAI,IAAI,IAAZ,EACE,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACK,QAAL,CAAcC,MAAnB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,IAAI,CAACK,QAAL,CAAcE,OAAnB,CAFF,CADF,CADF,KAOK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACN;;;6BAEQ;AAAA;;AACP,WAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAAAV,IAAI,EAAI;AAC5B,eACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACW,EAAhB;AAAoB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,YAAL,CAAkBZ,IAAlB,CAAN;AAAA,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,IAAI,CAACE,KAAhC;AAAuC,UAAA,GAAG,EAAEF,IAAI,CAACG,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYH,IAAI,CAACG,IAAjB,CADF,CAFF,CADF,CADF;AAUD,OAXD;AAYA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKU,UAAL,CAAgB,KAAKf,KAAL,CAAWC,YAA3B,CADH,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG,KAAKe,cAAL,CAAoB,KAAKhB,KAAL,CAAWC,YAA/B,CAFH,CAJF,CADF;AAWD;;;;EA1DsBT,S;;AA6DzB,eAAeO,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardText,\n  CardBody,\n  CardTitle\n} from \"reactstrap\";\n\nclass Dishdetail extends Component {\n  state = {\n    selectedDish: null\n  };\n\n  onDishSelect(dish) {\n    this.setState({ selectedDish: dish });\n  }\n\n  renderDish(dish) {\n    if (dish != null)\n      return (\n        <Card>\n          <CardImg top src={dish.image} alt={dish.name} />\n          <CardBody>\n            <CardTitle>{dish.name}</CardTitle>\n            <CardText>{dish.description}</CardText>\n          </CardBody>\n        </Card>\n      );\n    else return <div />;\n  }\n\n  renderComments(dish) {\n    if (dish != null)\n      return (\n        <ul>\n          <li>{dish.comments.author}</li>\n          <li>{dish.comments.comment}</li>\n        </ul>\n      );\n    else return <div />;\n  }\n\n  render() {\n    this.props.dishes.map(dish => {\n      return (\n        <div className=\"col-12 col-md-5 m-1\">\n          <Card key={dish.id} onClick={() => this.onDishSelect(dish)}>\n            <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n            <CardImgOverlay>\n              <CardTitle>{dish.name}</CardTitle>\n            </CardImgOverlay>\n          </Card>\n        </div>\n      );\n    });\n    return (\n      <div className=\"row\">\n        <div className=\"col-12 col-md-5 m-1\">\n          {this.renderDish(this.state.selectedDish)}\n        </div>\n        <div className=\"col-12 col-md-5 m-1\">\n          <h4 className=\"text-center\">Comments</h4>\n          {this.renderComments(this.state.selectedDish)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dishdetail;\n"]},"metadata":{},"sourceType":"module"}