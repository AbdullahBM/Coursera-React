{"ast":null,"code":"var _jsxFileName = \"/home/abdulah/Downloads/coursera-React/confusion/src/components/DishdetailComponent.js\";\nimport React from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle } from \"reactstrap\";\n\nfunction RenderDish(_ref) {\n  var dish = _ref.dish;\n  if (dish != null) return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    top: true,\n    src: dish.image,\n    alt: dish.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, dish.name), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, dish.description)));else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n}\n\nfunction RenderComments(_ref2) {\n  var dish = _ref2.dish;\n\n  if (dish != null) {\n    return dish.comments.map(function (comment) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Comments\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, comment.author, \" ...\", new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"2-digit\"\n      }).format(new Date(Date.parse(comment.date)))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, comment.comment)));\n    });\n  } else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n}\n\nvar Dishdetail = function Dishdetail(props) {\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(RenderDish, {\n    dish: props.dish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(RenderComments, {\n    dish: props.dish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n};\n\nexport default Dishdetail;","map":{"version":3,"sources":["/home/abdulah/Downloads/coursera-React/confusion/src/components/DishdetailComponent.js"],"names":["React","Card","CardImg","CardText","CardBody","CardTitle","RenderDish","dish","image","name","description","RenderComments","comments","map","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,SAA5C,QAA6D,YAA7D;;AAEA,SAASC,UAAT,OAA8B;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC5B,MAAIA,IAAI,IAAI,IAAZ,EACE,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,GAAG,MAAZ;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,KAAvB;AAA8B,IAAA,GAAG,EAAED,IAAI,CAACE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,IAAI,CAACE,IAAjB,CADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWF,IAAI,CAACG,WAAhB,CAFF,CAFF,CADF,CADF,KAUK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACN;;AAED,SAASC,cAAT,QAAkC;AAAA,MAARJ,IAAQ,SAARA,IAAQ;;AAChC,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAOA,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkB,UAAAC,OAAO,EAAI;AAClC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OAAO,CAACC,MADX,UAEG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAChCC,QAAAA,IAAI,EAAE,SAD0B;AAEhCC,QAAAA,KAAK,EAAE,OAFyB;AAGhCC,QAAAA,GAAG,EAAE;AAH2B,OAAjC,EAIEC,MAJF,CAIS,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,IAAnB,CAAT,CAJT,CAFH,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKV,OAAO,CAACA,OAAb,CATF,CAFF,CADF;AAgBD,KAjBM,CAAP;AAkBD,GAnBD,MAmBO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACR;;AAED,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,KAAK,CAACnB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEmB,KAAK,CAACnB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CADF;AAYD,CAbD;;AAeA,eAAekB,UAAf","sourcesContent":["import React from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle } from \"reactstrap\";\n\nfunction RenderDish({ dish }) {\n  if (dish != null)\n    return (\n      <Card>\n        <CardImg top src={dish.image} alt={dish.name} />\n        <CardBody>\n          <CardTitle>{dish.name}</CardTitle>\n          <CardText>{dish.description}</CardText>\n        </CardBody>\n      </Card>\n    );\n  else return <div />;\n}\n\nfunction RenderComments({ dish }) {\n  if (dish != null) {\n    return dish.comments.map(comment => {\n      return (\n        <div>\n          <h4 className=\"text-center\">Comments</h4>\n          <ul>\n            <li>\n              {comment.author} ...\n              {new Intl.DateTimeFormat(\"en-US\", {\n                year: \"numeric\",\n                month: \"short\",\n                day: \"2-digit\"\n              }).format(new Date(Date.parse(comment.date)))}\n            </li>\n            <li>{comment.comment}</li>\n          </ul>\n        </div>\n      );\n    });\n  } else return <div />;\n}\n\nconst Dishdetail = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 col-md-5 m-1\">\n          <RenderDish dish={props.dish} />\n        </div>\n        <div className=\"col-12 col-md-5 m-1\">\n          <RenderComments dish={props.dish} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dishdetail;\n"]},"metadata":{},"sourceType":"module"}